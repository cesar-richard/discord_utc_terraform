name: Terraform CI

on:
  pull_request:
    branches:
      - main

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@main
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          sync-labels: true
  validate:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
      TF_VAR_discord_token: ${{ secrets.DISCORD_TOKEN }}
      TF_VAR_github_organization: "SiMDE-Projects"
      TF_VAR_github_old_organization: "simde-utc"
      TF_VAR_github_token: ${{ secrets.CESAR_GHTOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # #### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\` (ignored)
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN.replace(/module(.*)\[id=(.*)\]\n/ig,'').trim()}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
